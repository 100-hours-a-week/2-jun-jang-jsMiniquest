1. HTML 파일 로딩
웹 브라우저는 사용자가 요청한 웹 페이지의 HTML 파일을 서버에서 받아온다다. 이 파일에는 자바스크립트 코드가 포함될 수 있으며, <script> 태그를 통해 자바스크립트 파일을 연결할 수 있다.

2. 브라우저의 렌더링 엔진
브라우저는 HTML 파일을 렌더링 엔진을 사용하여 해석한다. 이 엔진은 HTML을 분석하고 DOM(문서 객체 모델)을 생성한한다. DOM은 웹 페이지의 구조를 객체로 표현한 것이이다. 동시에 CSS 파일을 읽어 스타일 규칙을 적용하고, 결과적으로 페이지가 브라우저에 렌더링된된다.

3. 자바스크립트 엔진
자바스크립트 코드가 포함된 <script> 태그를 만나면, 브라우저는 자바스크립트 엔진을 사용하여 코드를 실행합니다. 

    자바스크립트 엔진의 역할:
        파싱 (Parsing): 자바스크립트 엔진은 자바스크립트 코드를 읽고, 어휘 분석과 구문 분석을 통해 추상 구문 트리 (AST)를 생성한다다. AST는 코드의 구조를 트리 형태로 나타낸 것이이다.

        컴파일 (Compilation): 생성된 AST는 자바스크립트 엔진에 의해 바이트 코드로 변환된된다. 이 과정에서 엔진은 코드 최적화도 수행한한다.

        실행 (Execution): 컴파일된 바이트 코드는 엔진의 실행 컨텍스트 내에서 실행된된다. 자바스크립트 엔진은 호출 스택을 관리하고, 실행할 코드가 있을 때마다 스택에서 꺼내 실행한다.

4. 브라우저의 이벤트 루프와 콜백 큐
자바스크립트는 싱글 스레드로 동작하므로, 비동기 작업은 이벤트 루프와 콜백 큐를 통해 처리된다다. 자바스크립트 엔진은 현재 실행 중인 코드가 완료되면 콜백 큐에서 대기 중인 작업을 순차적으로 처리한다.

5. DOM과 상호작용
자바스크립트는 DOM을 통해 HTML 요소에 접근하고 조작할 수 있다. 예를 들어, document.getElementById를 사용하여 DOM에서 특정 요소를 찾고, element.innerHTML을 통해 콘텐츠를 변경하는 등의 작업을 할 수 있다
